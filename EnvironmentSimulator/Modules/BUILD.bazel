load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

####################################################################################################

filegroup(
    name = "scenario_engine_source_files",
    srcs = select({
        "@esmini//support/bazel/common:osi_disabled": glob([
            "ScenarioEngine/**/*.cpp",
            "ScenarioEngine/**/*.c",
        ], exclude = [
            "ScenarioEngine/**/OSI*.cpp",
            "ScenarioEngine/**/OSI*.c",
        ]),
        "@esmini//support/bazel/common:osi_enabled": glob([
            "ScenarioEngine/**/*.cpp",
            "ScenarioEngine/**/*.c",
        ]),
    }),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "scenario_engine_header_files",
    srcs = select({
        "@esmini//support/bazel/common:osi_disabled": glob([
            "ScenarioEngine/**/*.hpp",
            "ScenarioEngine/**/*.h",
        ], exclude = [
            "ScenarioEngine/**/OSI*.hpp",
            "ScenarioEngine/**/OSI*.h",
        ]),
        "@esmini//support/bazel/common:osi_enabled": glob([
            "ScenarioEngine/**/*.hpp",
            "ScenarioEngine/**/*.h",
        ]),
    }),
    visibility = ["//visibility:public"],
)

####################################################################################################

filegroup(
    name = "controllers_source_files",
    srcs = select({
        "@esmini//support/bazel/common:osi_disabled": glob([
            "Controllers/**/*.cpp",
        ], exclude = [
            "Controllers/**/*Sumo.cpp",
        ]),
        "@esmini//support/bazel/common:osi_enabled": glob([
            "Controllers/**/*.cpp",
        ]),
    }),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "controllers_header_files",
    srcs = select({
        "@esmini//support/bazel/common:sumo_disabled": glob([
            "Controllers/**/*.hpp",
        ], exclude = [
            "Controllers/**/*Sumo.hpp",
        ]),
        "@esmini//support/bazel/common:sumo_enabled": glob([
            "Controllers/**/*.hpp",
        ]),
    }),
    visibility = ["//visibility:public"],
)

####################################################################################################

filegroup(
    name = "player_base_source_files",
    srcs = select({
        "@esmini//support/bazel/common:implot_disabled": glob([
            "PlayerBase/**/*.cpp",
        ], exclude = [
            "PlayerBase/**/*Plot.cpp",
        ]),
        "@esmini//support/bazel/common:implot_enabled": glob([
            "PlayerBase/**/*.cpp",
        ]),
    }),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "player_base_header_files",
    srcs = select({
        "@esmini//support/bazel/common:implot_disabled": glob([
            "PlayerBase/**/*.hpp",
        ], exclude = [
            "PlayerBase/**/*Plot.hpp",
        ]),
        "@esmini//support/bazel/common:implot_enabled": glob([
            "PlayerBase/**/*.hpp",
        ]),
    }),
    visibility = ["//visibility:public"],
)

####################################################################################################

cc_library(
    name = "scenarioengine_controllers_playerbase",
    srcs = [
        ":scenario_engine_source_files",
        ":controllers_source_files",
        ":player_base_source_files",
    ],
    hdrs = [
        ":scenario_engine_header_files",
        ":controllers_header_files",
        ":player_base_header_files",
    ],
    includes = [
        "ScenarioEngine/OSCTypeDefs",
        "ScenarioEngine/SourceFiles",
        "Controllers",
        "PlayerBase",
    ],
    linkstatic = True,
    visibility = ["//visibility:public"],
    deps = [
        "//EnvironmentSimulator/Modules/CommonMini:udp",
        "//EnvironmentSimulator/Modules/RoadManager:road_manager",
        "//EnvironmentSimulator/Modules/RoadManager:lane_independent_router",
        "//externals:pugixml",
        "//externals:expr",
    ] + select({
        "@esmini//support/bazel/common:osi_disabled": [],
        "@esmini//support/bazel/common:osi_enabled": ["@osi//:osi"],
    }) + select({
        "@esmini//support/bazel/common:implot_disabled": [],
        "@esmini//support/bazel/common:implot_enabled": ["@implot//:implot"],
    }) + select({
        "@esmini//support/bazel/common:sumo_disabled": [],
        "@esmini//support/bazel/common:sumo_enabled": ["@sumo//:sumo"],
    })
)